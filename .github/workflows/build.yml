# This is a basic workflow to help you get started with Actions

name: Build & Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    types: [opened, reopened]
    branches: 
      - master
      - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  linter:
   runs-on: ubuntu-latest
   steps:
    - uses: actions/checkout@v3
    - uses: ScaCap/action-ktlint@master
      with:
        android: true
        github_token: ${{ secrets.GTHUB_TOKEN }}
        reporter: github-pr-review
        fail_on_error: true
        level: warning

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3.2.0
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'gradle'
      - name: Run Build
        run: ./gradlew clean build -x testDebugUnitTest -x testReleaseUnitTest
      - name: Run Test
        run: |
          ./gradlew test
          ./gradlew koverMergedXmlReport
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_KEY }} 
  instrumented_test:
    runs-on: macos-latest
    timeout-minutes: 5
    strategy:
      matrix:
        api-level: [28]
        target: [google_apis]
    steps:
      - uses: actions/checkout@v3
      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: pixel_3
          script:
            "JAVA_HOME=$JAVA_HOME_17_X64 && ./gradlew connectedDebugAndroidTest"
